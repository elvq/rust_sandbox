{"message":"relation \"dividends\" does not exist","code":null,"level":"error","spans":[{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.3.5/src/macros.rs","byte_start":6127,"byte_end":6133,"line_start":132,"line_end":132,"column_start":41,"column_end":47,"is_primary":true,"text":[{"text":"            $crate::sqlx_macros::query!($query, $($args),*);","highlight_start":41,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.3.5/src/macros.rs","byte_start":6166,"byte_end":6191,"line_start":134,"line_end":134,"column_start":9,"column_end":34,"is_primary":false,"text":[{"text":"        macro_result!($($args),*)","highlight_start":9,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/bin/iter1.rs","byte_start":584,"byte_end":666,"line_start":34,"line_end":37,"column_start":25,"column_end":6,"is_primary":false,"text":[{"text":"    let dividend_rows = sqlx::query!(","highlight_start":25,"highlight_end":38},{"text":"        r#\"select * from dividends where id  = $1\"#,","highlight_start":1,"highlight_end":53},{"text":"        1","highlight_start":1,"highlight_end":10},{"text":"    )","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"sqlx::query!","def_site_span":{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.3.5/src/macros.rs","byte_start":5659,"byte_end":6201,"line_start":119,"line_end":136,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"macro_rules! query (","highlight_start":1,"highlight_end":1},{"text":"    // by emitting a macro definition from our proc-macro containing the result tokens,","highlight_start":1,"highlight_end":1},{"text":"    // we no longer have a need for `proc-macro-hack`","highlight_start":1,"highlight_end":1},{"text":"    ($query:literal) => ({","highlight_start":1,"highlight_end":1},{"text":"        #[macro_use]","highlight_start":1,"highlight_end":1},{"text":"        mod _macro_result {","highlight_start":1,"highlight_end":1},{"text":"            $crate::sqlx_macros::query!($query);","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"        macro_result!()","highlight_start":1,"highlight_end":1},{"text":"    });","highlight_start":1,"highlight_end":1},{"text":"    ($query:literal, $($args:expr),*$(,)?) => ({","highlight_start":1,"highlight_end":1},{"text":"        #[macro_use]","highlight_start":1,"highlight_end":1},{"text":"        mod _macro_result {","highlight_start":1,"highlight_end":1},{"text":"            $crate::sqlx_macros::query!($query, $($args),*);","highlight_start":1,"highlight_end":1},{"text":"        }","highlight_start":1,"highlight_end":1},{"text":"        macro_result!($($args),*)","highlight_start":1,"highlight_end":1},{"text":"    })","highlight_start":1,"highlight_end":1},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"macro_result!","def_site_span":{"file_name":"/home/eric/.cargo/registry/src/github.com-1ecc6299db9ec823/sqlx-0.3.5/src/macros.rs","byte_start":6099,"byte_end":6147,"line_start":132,"line_end":132,"column_start":13,"column_end":61,"is_primary":false,"text":[{"text":"            $crate::sqlx_macros::query!($query, $($args),*);","highlight_start":13,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: relation \"dividends\" does not exist\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/bin/iter1.rs:34:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m    let dividend_rows = sqlx::query!(\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m_________________________^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        r#\"select * from dividends where id  = $1\"#,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        1\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    )\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|_____^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"aborting due to previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to previous error\u001b[0m\n\n"}
